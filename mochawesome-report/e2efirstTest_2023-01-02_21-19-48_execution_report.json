{
  "stats": {
    "suites": 1,
    "tests": 0,
    "passes": 0,
    "pending": 0,
    "failures": 0,
    "start": "2023-01-02T15:49:52.242Z",
    "end": "2023-01-02T15:49:52.276Z",
    "duration": 34,
    "testsRegistered": 1,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 1,
    "hasOther": true,
    "skipped": 1,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "76fcb58c-55ce-43eb-9523-c4563fba3ab8",
      "title": "",
      "fullFile": "C:\\Liquidx\\LiquidX\\qa-api-onboarding\\app\\spec\\e2e\\firstTest.spec.ts",
      "file": "\\app\\spec\\e2e\\firstTest.spec.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f3f281ca-baa9-4e80-b679-ca5eaafeae99",
          "title": "====================Sample Tests==============================",
          "fullFile": "C:\\Liquidx\\LiquidX\\qa-api-onboarding\\app\\spec\\e2e\\firstTest.spec.ts",
          "file": "\\app\\spec\\e2e\\firstTest.spec.ts",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: setup for \"Get Available products in Onboarding \"",
              "fullTitle": "====================Sample Tests============================== \"before all\" hook: setup for \"Get Available products in Onboarding \"",
              "timedOut": false,
              "duration": 29,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "console.log(\"env, \", env);\n//     accesstokenonbUserAdmin = await restObj.getAccessToken(config.onbUserAdmin, config.Password, config.b2cConfig);\n//    return accesstokenonbUserAdmin\nawait restObj.getAccessToken(config.onbUserAdmin, config.Password, config.b2cConfig).then((token) => {\n    return accesstokenonbUserAdmin = token;\n});\nonbe2eObj = new index_1.E2EONBHelper(accesstokenonbUserAdmin);\nlet commonObj = new index_1.CommonHelper();\n// var val = Math.floor(1000 + Math.random() * 9000);\n// var uuid = val + data.invamount_max;\n// invFileName = `hnb_inv_${uuid}.csv`\n// let invCount = commonObj.getRndInteger(data.inv_min, data.inv_max)\n// console.log(\"invoiceCount\" + invCount);\n// dueDays = commonObj.getRndInteger(9,10);\n//     console.log(\"------------------\", dueDays)\n//    let ingestedData = await digiObj.AddDataToCSV(invFileName, \"auto-hnb-\", invCount, data.invamount_min, data.invamount_max, 40, 20, outputDir, config.distributionFacilityData.hnbParticipantData,\"Distribution\")//, fileTypes.length - 1,data.,2)\n//  let ingestedData = await digiObj.AddDataToCSV(invFileName, \"inv-hnb-auto-pi-\", invCount, data.invamount_min, data.invamount_max, 40, 20, outputDir, config.distributionFacilityData.hnbParticipantData)//, fileTypes.length - 1,data.,2)\n//    invoiceName = ingestedData.invoiceNumber\n//    totalFaceValue = ingestedData.totalfaceValue;",
              "err": {
                "message": "Error: require() of ES Module C:\\Liquidx\\LiquidX\\qa-api-onboarding\\node_modules\\node-fetch\\src\\index.js from C:\\Liquidx\\LiquidX\\qa-api-onboarding\\app\\helper\\rest-api-helper.ts not supported.\nInstead change the require of index.js in C:\\Liquidx\\LiquidX\\qa-api-onboarding\\app\\helper\\rest-api-helper.ts to a dynamic import() which is available in all CommonJS modules.",
                "estack": "Error [ERR_REQUIRE_ESM]: require() of ES Module C:\\Liquidx\\LiquidX\\qa-api-onboarding\\node_modules\\node-fetch\\src\\index.js from C:\\Liquidx\\LiquidX\\qa-api-onboarding\\app\\helper\\rest-api-helper.ts not supported.\nInstead change the require of index.js in C:\\Liquidx\\LiquidX\\qa-api-onboarding\\app\\helper\\rest-api-helper.ts to a dynamic import() which is available in all CommonJS modules.\n    at C:\\Liquidx\\LiquidX\\qa-api-onboarding\\app\\helper\\rest-api-helper.ts:28:72\n    at async RestAPIHelper.getAccessToken (app\\helper\\rest-api-helper.ts:95:26)\n    at async Context.<anonymous> (app\\spec\\e2e\\firstTest.spec.ts:19:9)",
                "diff": null
              },
              "uuid": "0bdd17a7-1796-412e-94a5-98aff45c6b96",
              "parentUUID": "f3f281ca-baa9-4e80-b679-ca5eaafeae99",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get Available products in Onboarding ",
              "fullTitle": "====================Sample Tests============================== Get Available products in Onboarding ",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await new Promise((resolve) => setTimeout(async function () {\n    allProducts = await onbe2eObj.getAvailableProductsForONB();\n    console.log(\"********* Get Available Invoices For Facility  ******\", allProducts);\n    resolve(allProducts);\n    console.log(\"invoices - \", allProducts);\n}, 90000));",
              "err": {},
              "uuid": "3ceff92c-7c04-48af-b682-eb1681a8a862",
              "parentUUID": "f3f281ca-baa9-4e80-b679-ca5eaafeae99",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "3ceff92c-7c04-48af-b682-eb1681a8a862"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 160000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 160000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.0.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "e2efirstTest_2023-01-02_21-19-48_execution_report",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "enableCode": "false",
        "mochaFile": "results/my-test-output.xml",
        "reportFilename": "e2efirstTest_2023-01-02_21-19-48_execution_report"
      },
      "version": "6.2.0"
    }
  }
}